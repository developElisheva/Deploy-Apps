{"ast":null,"code":"import axios from 'axios';\n\n// Set base URL from environment variable\naxios.defaults.baseURL = process.env.REACT_APP_URL || 'https://todoapi-2l8v.onrender.com';\nexport default {\n  getTasks: async () => {\n    try {\n      console.log('Fetching tasks from:', axios.defaults.baseURL + '/selectAll');\n      const result = await axios.get(`selectAll`);\n\n      // Ensure we always return an array\n      if (Array.isArray(result.data)) {\n        console.log('Received data array with length:', result.data.length);\n        return result.data;\n      } else {\n        console.log('API did not return an array, received:', typeof result.data);\n        // Return empty array as fallback\n        return [];\n      }\n    } catch (err) {\n      console.error('Error getting tasks:', err);\n      // Always return an array even on error\n      return [];\n    }\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    try {\n      const result = await axios.post(`add?Name=${encodeURIComponent(name)}`);\n      return result.data;\n    } catch (err) {\n      console.error('Error adding task:', err);\n      return null;\n    }\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    try {\n      const result = await axios.patch(`update/${id}`, isComplete, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      return result.data;\n    } catch (err) {\n      console.error('Error setting completion:', err);\n      return null;\n    }\n  },\n  deleteTask: async id => {\n    console.log('deleteTask', id);\n    try {\n      // Fix: Make sure the path is consistent (removing the leading slash)\n      const result = await axios.delete(`delete/${id}`);\n      return result.data;\n    } catch (err) {\n      console.error('Error deleting task:', err);\n      return null;\n    }\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","process","env","REACT_APP_URL","getTasks","console","log","result","get","Array","isArray","data","length","err","error","addTask","name","post","encodeURIComponent","setCompleted","id","isComplete","patch","headers","deleteTask","delete"],"sources":["C:/Users/elish/הנדסאים/פרקטיקוד/פרקטיקוד 4/gitHub/Deploy-Apps/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\n// Set base URL from environment variable\naxios.defaults.baseURL = process.env.REACT_APP_URL || 'https://todoapi-2l8v.onrender.com';\n\nexport default {\n  getTasks: async () => {\n    try {\n      console.log('Fetching tasks from:', axios.defaults.baseURL + '/selectAll');\n      const result = await axios.get(`selectAll`);\n      \n      // Ensure we always return an array\n      if (Array.isArray(result.data)) {\n        console.log('Received data array with length:', result.data.length);\n        return result.data;\n      } else {\n        console.log('API did not return an array, received:', typeof result.data);\n        // Return empty array as fallback\n        return [];\n      }\n    } catch (err) {\n      console.error('Error getting tasks:', err);\n      // Always return an array even on error\n      return [];\n    }\n  },\n\n  addTask: async (name) => {\n    console.log('addTask', name);\n    try {\n      const result = await axios.post(`add?Name=${encodeURIComponent(name)}`);\n      return result.data;\n    } catch (err) {\n      console.error('Error adding task:', err);\n      return null;\n    }\n  },\n\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', { id, isComplete });\n    try {\n      const result = await axios.patch(`update/${id}`, isComplete, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      return result.data;\n    } catch (err) {\n      console.error('Error setting completion:', err);\n      return null;\n    }\n  },\n\n  deleteTask: async (id) => {\n    console.log('deleteTask', id);\n    try {\n      // Fix: Make sure the path is consistent (removing the leading slash)\n      const result = await axios.delete(`delete/${id}`);\n      return result.data;\n    } catch (err) {\n      console.error('Error deleting task:', err);\n      return null;\n    }\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACAA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,aAAa,IAAI,mCAAmC;AAEzF,eAAe;EACbC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAER,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,YAAY,CAAC;MAC1E,MAAMO,MAAM,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,WAAW,CAAC;;MAE3C;MACA,IAAIC,KAAK,CAACC,OAAO,CAACH,MAAM,CAACI,IAAI,CAAC,EAAE;QAC9BN,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEC,MAAM,CAACI,IAAI,CAACC,MAAM,CAAC;QACnE,OAAOL,MAAM,CAACI,IAAI;MACpB,CAAC,MAAM;QACLN,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAE,OAAOC,MAAM,CAACI,IAAI,CAAC;QACzE;QACA,OAAO,EAAE;MACX;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZR,OAAO,CAACS,KAAK,CAAC,sBAAsB,EAAED,GAAG,CAAC;MAC1C;MACA,OAAO,EAAE;IACX;EACF,CAAC;EAEDE,OAAO,EAAE,MAAOC,IAAI,IAAK;IACvBX,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEU,IAAI,CAAC;IAC5B,IAAI;MACF,MAAMT,MAAM,GAAG,MAAMT,KAAK,CAACmB,IAAI,CAAC,YAAYC,kBAAkB,CAACF,IAAI,CAAC,EAAE,CAAC;MACvE,OAAOT,MAAM,CAACI,IAAI;IACpB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZR,OAAO,CAACS,KAAK,CAAC,oBAAoB,EAAED,GAAG,CAAC;MACxC,OAAO,IAAI;IACb;EACF,CAAC;EAEDM,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACtChB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;MAAEc,EAAE;MAAEC;IAAW,CAAC,CAAC;IAC/C,IAAI;MACF,MAAMd,MAAM,GAAG,MAAMT,KAAK,CAACwB,KAAK,CAAC,UAAUF,EAAE,EAAE,EAAEC,UAAU,EAAE;QAC3DE,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,OAAOhB,MAAM,CAACI,IAAI;IACpB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZR,OAAO,CAACS,KAAK,CAAC,2BAA2B,EAAED,GAAG,CAAC;MAC/C,OAAO,IAAI;IACb;EACF,CAAC;EAEDW,UAAU,EAAE,MAAOJ,EAAE,IAAK;IACxBf,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEc,EAAE,CAAC;IAC7B,IAAI;MACF;MACA,MAAMb,MAAM,GAAG,MAAMT,KAAK,CAAC2B,MAAM,CAAC,UAAUL,EAAE,EAAE,CAAC;MACjD,OAAOb,MAAM,CAACI,IAAI;IACpB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZR,OAAO,CAACS,KAAK,CAAC,sBAAsB,EAAED,GAAG,CAAC;MAC1C,OAAO,IAAI;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}