{"ast":null,"code":"import axios from 'axios';\n\n// בסביבת פיתוח\nconst API_BASE_URL = process.env.NODE_ENV === 'development' ? 'https://todoapi-2l8v.onrender.com' : '';\nconsole.log(API_BASE_URL);\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL\n});\napiClient.interceptors.request.use(config => {\n  console.log('🔹 Sending request to:', config.baseURL + config.url);\n  return config;\n});\nexport default {\n  getTasks: async () => {\n    try {\n      // שימוש ב-fetch במקום axios\n      const response = await fetch(`${API_BASE_URL}/selectAll`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Data received from API:', data);\n      if (Array.isArray(data)) {\n        return data;\n      } else {\n        console.warn('Data is not an array:', typeof data);\n        return [];\n      }\n    } catch (err) {\n      console.error('Error fetching tasks:', err);\n      return [];\n    }\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    try {\n      const result = await apiClient.patch(`/update/${id}`, isComplete, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      return result.data;\n    } catch (err) {\n      console.error('Error setting completion:', err);\n      return null;\n    }\n  },\n  deleteTask: async id => {\n    console.log('deleteTask', id);\n    try {\n      const result = await apiClient.delete(`/delete/${id}`);\n      return result.data;\n    } catch (err) {\n      console.error('Error deleting task:', err);\n      return null;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","NODE_ENV","console","log","apiClient","create","baseURL","interceptors","request","use","config","url","getTasks","response","fetch","ok","Error","status","data","json","Array","isArray","warn","err","error","setCompleted","id","isComplete","result","patch","headers","deleteTask","delete"],"sources":["C:/Users/elish/הנדסאים/פרקטיקוד/פרקטיקוד 4/gitHub/Deploy-Apps/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\n// בסביבת פיתוח\nconst API_BASE_URL = process.env.NODE_ENV === 'development' \n  ? 'https://todoapi-2l8v.onrender.com'\n  : '';console.log( API_BASE_URL);\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL\n});\n\napiClient.interceptors.request.use(config => {\n  console.log('🔹 Sending request to:', config.baseURL + config.url);\n  return config;\n});\n\nexport default {\n  getTasks: async () => {\n    try {\n      // שימוש ב-fetch במקום axios\n      const response = await fetch(`${API_BASE_URL}/selectAll`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Data received from API:', data);\n      \n      if (Array.isArray(data)) {\n        return data;\n      } else {\n        console.warn('Data is not an array:', typeof data);\n        return [];\n      }\n    } catch (err) {\n      console.error('Error fetching tasks:', err);\n      return [];\n    }\n  },\n  \n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', { id, isComplete });\n    try {\n      const result = await apiClient.patch(`/update/${id}`, isComplete, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      return result.data;\n    } catch (err) {\n      console.error('Error setting completion:', err);\n      return null;\n    }\n  },\n\n  deleteTask: async (id) => {\n    console.log('deleteTask', id);\n    try {\n      const result = await apiClient.delete(`/delete/${id}`);\n      return result.data;\n    } catch (err) {\n      console.error('Error deleting task:', err);\n      return null;\n    }\n  }\n};\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,GACvD,mCAAmC,GACnC,EAAE;AAACC,OAAO,CAACC,GAAG,CAAEL,YAAY,CAAC;AAEjC,MAAMM,SAAS,GAAGP,KAAK,CAACQ,MAAM,CAAC;EAC7BC,OAAO,EAAER;AACX,CAAC,CAAC;AAEFM,SAAS,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EAC3CR,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEO,MAAM,CAACJ,OAAO,GAAGI,MAAM,CAACC,GAAG,CAAC;EAClE,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,eAAe;EACbE,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGhB,YAAY,YAAY,CAAC;MACzD,IAAI,CAACe,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCjB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEe,IAAI,CAAC;MAE5C,IAAIE,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;QACvB,OAAOA,IAAI;MACb,CAAC,MAAM;QACLhB,OAAO,CAACoB,IAAI,CAAC,uBAAuB,EAAE,OAAOJ,IAAI,CAAC;QAClD,OAAO,EAAE;MACX;IACF,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZrB,OAAO,CAACsB,KAAK,CAAC,uBAAuB,EAAED,GAAG,CAAC;MAC3C,OAAO,EAAE;IACX;EACF,CAAC;EAEDE,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACtCzB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;MAAEuB,EAAE;MAAEC;IAAW,CAAC,CAAC;IAC/C,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMxB,SAAS,CAACyB,KAAK,CAAC,WAAWH,EAAE,EAAE,EAAEC,UAAU,EAAE;QAChEG,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,OAAOF,MAAM,CAACV,IAAI;IACpB,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZrB,OAAO,CAACsB,KAAK,CAAC,2BAA2B,EAAED,GAAG,CAAC;MAC/C,OAAO,IAAI;IACb;EACF,CAAC;EAEDQ,UAAU,EAAE,MAAOL,EAAE,IAAK;IACxBxB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEuB,EAAE,CAAC;IAC7B,IAAI;MACF,MAAME,MAAM,GAAG,MAAMxB,SAAS,CAAC4B,MAAM,CAAC,WAAWN,EAAE,EAAE,CAAC;MACtD,OAAOE,MAAM,CAACV,IAAI;IACpB,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZrB,OAAO,CAACsB,KAAK,CAAC,sBAAsB,EAAED,GAAG,CAAC;MAC1C,OAAO,IAAI;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}