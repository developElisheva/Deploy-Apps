{"ast":null,"code":"import axios from 'axios';\n\n// Set base URL from environment variable\naxios.defaults.baseURL = process.env.REACT_APP_URL || 'https://todoapi-2l8v.onrender.com';\nexport default {\n  getTasks: async () => {\n    try {\n      console.log('Fetching tasks from:', `${axios.defaults.baseURL}/selectAll`);\n      const result = await axios.get('/selectAll');\n\n      // Ensure we always return an array\n      if (Array.isArray(result.data)) {\n        console.log('Received data array with length:', result.data.length);\n        return result.data;\n      } else {\n        console.log('API did not return an array, received:', typeof result.data, result.data);\n        // Return empty array as fallback\n        return [];\n      }\n    } catch (err) {\n      var _err$response;\n      console.error('Error getting tasks:', err.message, (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data);\n      // Always return an array even on error\n      return [];\n    }\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    try {\n      const result = await axios.post(`/add?Name=${encodeURIComponent(name)}`);\n      return result.data;\n    } catch (err) {\n      var _err$response2;\n      console.error('Error adding task:', err.message, (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data);\n      return null;\n    }\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    try {\n      const result = await axios.patch(`/update/${id}`, {\n        isComplete\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      return result.data;\n    } catch (err) {\n      var _err$response3;\n      console.error('Error setting completion:', err.message, (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data);\n      return null;\n    }\n  },\n  deleteTask: async id => {\n    console.log('deleteTask', id);\n    try {\n      const result = await axios.delete(`/delete/${id}`);\n      return result.data;\n    } catch (err) {\n      var _err$response4;\n      console.error('Error deleting task:', err.message, (_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data);\n      return null;\n    }\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","process","env","REACT_APP_URL","getTasks","console","log","result","get","Array","isArray","data","length","err","_err$response","error","message","response","addTask","name","post","encodeURIComponent","_err$response2","setCompleted","id","isComplete","patch","headers","_err$response3","deleteTask","delete","_err$response4"],"sources":["C:/Users/elish/הנדסאים/פרקטיקוד/פרקטיקוד 4/gitHub/Deploy-Apps/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\n// Set base URL from environment variable\naxios.defaults.baseURL = process.env.REACT_APP_URL || 'https://todoapi-2l8v.onrender.com';\n\nexport default {\n  getTasks: async () => {\n    try {\n      console.log('Fetching tasks from:', `${axios.defaults.baseURL}/selectAll`);\n      const result = await axios.get('/selectAll');\n      \n      // Ensure we always return an array\n      if (Array.isArray(result.data)) {\n        console.log('Received data array with length:', result.data.length);\n        return result.data;\n      } else {\n        console.log('API did not return an array, received:', typeof result.data, result.data);\n        // Return empty array as fallback\n        return [];\n      }\n    } catch (err) {\n      console.error('Error getting tasks:', err.message, err.response?.data);\n      // Always return an array even on error\n      return [];\n    }\n  },\n\n  addTask: async (name) => {\n    console.log('addTask', name);\n    try {\n      const result = await axios.post(`/add?Name=${encodeURIComponent(name)}`);\n      return result.data;\n    } catch (err) {\n      console.error('Error adding task:', err.message, err.response?.data);\n      return null;\n    }\n  },\n\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', { id, isComplete });\n    try {\n      const result = await axios.patch(`/update/${id}`, { isComplete }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      return result.data;\n    } catch (err) {\n      console.error('Error setting completion:', err.message, err.response?.data);\n      return null;\n    }\n  },\n\n  deleteTask: async (id) => {\n    console.log('deleteTask', id);\n    try {\n      const result = await axios.delete(`/delete/${id}`);\n      return result.data;\n    } catch (err) {\n      console.error('Error deleting task:', err.message, err.response?.data);\n      return null;\n    }\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}