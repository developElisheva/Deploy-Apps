{"ast":null,"code":"import axios from 'axios';\n\n// Set base URL from environment variable\naxios.defaults.baseURL = process.env.REACT_APP_URL || 'https://todoapi-2l8v.onrender.com';\nexport default {\n  getTasks: async () => {\n    try {\n      console.log('Fetching tasks from:', `${axios.defaults.baseURL}/selectAll`);\n      const result = await axios.get('/selectAll');\n\n      // Log the actual response data to debug\n      console.log('Raw response data:', result.data);\n\n      // Ensure we always return an array\n      if (Array.isArray(result.data)) {\n        console.log('Received data array with length:', result.data.length);\n        return result.data.map(item => ({\n          id: item.id,\n          name: item.name,\n          isComplete: item.isComplete === true\n        }));\n      } else if (typeof result.data === 'string') {\n        // Try to parse the string as JSON\n        try {\n          const parsedData = JSON.parse(result.data);\n          if (Array.isArray(parsedData)) {\n            console.log('Successfully parsed string to array with length:', parsedData.length);\n            return parsedData.map(item => ({\n              id: item.Id,\n              // Note the capital I\n              name: item.Name,\n              // Note the capital N\n              isComplete: item.IsComplete === true // Note the capital I and C\n            }));\n          } else {\n            console.log('Parsed string but result is not an array:', typeof parsedData);\n            return [];\n          }\n        } catch (parseErr) {\n          console.error('Failed to parse response as JSON:', parseErr);\n          return [];\n        }\n      } else {\n        console.log('API did not return an array, received:', typeof result.data, result.data);\n        return [];\n      }\n    } catch (err) {\n      var _err$response;\n      console.error('Error getting tasks:', err.message);\n      console.error('Error details:', (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data);\n      return [];\n    }\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    try {\n      const result = await axios.post(`/add?Name=${encodeURIComponent(name)}`);\n      console.log('Add task response:', result.data);\n      return result.data;\n    } catch (err) {\n      var _err$response2;\n      console.error('Error adding task:', err.message);\n      console.error('Error details:', (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data);\n      return null;\n    }\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    try {\n      // Send as JSON payload since the API expects a boolean value\n      const result = await axios.patch(`/update/${id}`, isComplete, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Update task response:', result.data);\n      return result.data;\n    } catch (err) {\n      var _err$response3, _err$response4;\n      console.error('Error setting completion:', err.message);\n      console.error('Error details:', (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data, (_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.status);\n      return null;\n    }\n  },\n  deleteTask: async id => {\n    console.log('deleteTask', id);\n    try {\n      const result = await axios.delete(`/delete/${id}`);\n      console.log('Delete task response:', result.data);\n      return result.data;\n    } catch (err) {\n      var _err$response5;\n      console.error('Error deleting task:', err.message);\n      console.error('Error details:', (_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : _err$response5.data);\n      return null;\n    }\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","process","env","REACT_APP_URL","getTasks","console","log","result","get","data","Array","isArray","length","map","item","id","name","isComplete","parsedData","JSON","parse","Id","Name","IsComplete","parseErr","error","err","_err$response","message","response","addTask","post","encodeURIComponent","_err$response2","setCompleted","patch","headers","_err$response3","_err$response4","status","deleteTask","delete","_err$response5"],"sources":["C:/Users/elish/הנדסאים/פרקטיקוד/פרקטיקוד 4/gitHub/Deploy-Apps/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\n// Set base URL from environment variable\naxios.defaults.baseURL = process.env.REACT_APP_URL || 'https://todoapi-2l8v.onrender.com';\n\nexport default {\n  getTasks: async () => {\n    try {\n      console.log('Fetching tasks from:', `${axios.defaults.baseURL}/selectAll`);\n      const result = await axios.get('/selectAll');\n      \n      // Log the actual response data to debug\n      console.log('Raw response data:', result.data);\n      \n      // Ensure we always return an array\n      if (Array.isArray(result.data)) {\n        console.log('Received data array with length:', result.data.length);\n        return result.data.map(item => ({\n          id: item.id,\n          name: item.name,\n          isComplete: item.isComplete === true\n        }));\n      } else if (typeof result.data === 'string') {\n        // Try to parse the string as JSON\n        try {\n          const parsedData = JSON.parse(result.data);\n          if (Array.isArray(parsedData)) {\n            console.log('Successfully parsed string to array with length:', parsedData.length);\n            return parsedData.map(item => ({\n              id: item.Id,  // Note the capital I\n              name: item.Name,  // Note the capital N\n              isComplete: item.IsComplete === true  // Note the capital I and C\n            }));\n          } else {\n            console.log('Parsed string but result is not an array:', typeof parsedData);\n            return [];\n          }\n        } catch (parseErr) {\n          console.error('Failed to parse response as JSON:', parseErr);\n          return [];\n        }\n      } else {\n        console.log('API did not return an array, received:', typeof result.data, result.data);\n        return [];\n      }\n    } catch (err) {\n      console.error('Error getting tasks:', err.message);\n      console.error('Error details:', err.response?.data);\n      return [];\n    }\n  },\n\n  addTask: async (name) => {\n    console.log('addTask', name);\n    try {\n      const result = await axios.post(`/add?Name=${encodeURIComponent(name)}`);\n      console.log('Add task response:', result.data);\n      return result.data;\n    } catch (err) {\n      console.error('Error adding task:', err.message);\n      console.error('Error details:', err.response?.data);\n      return null;\n    }\n  },\n\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', { id, isComplete });\n    try {\n      // Send as JSON payload since the API expects a boolean value\n      const result = await axios.patch(`/update/${id}`, isComplete, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Update task response:', result.data);\n      return result.data;\n    } catch (err) {\n      console.error('Error setting completion:', err.message);\n      console.error('Error details:', err.response?.data, err.response?.status);\n      return null;\n    }\n  },\n\n  deleteTask: async (id) => {\n    console.log('deleteTask', id);\n    try {\n      const result = await axios.delete(`/delete/${id}`);\n      console.log('Delete task response:', result.data);\n      return result.data;\n    } catch (err) {\n      console.error('Error deleting task:', err.message);\n      console.error('Error details:', err.response?.data);\n      return null;\n    }\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}