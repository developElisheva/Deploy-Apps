{"ast":null,"code":"import axios from 'axios';\nconsole.log('REACT_APP_URL:', process.env.REACT_APP_URL);\nconst API_BASE_URL = process.env.REACT_APP_URL;\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL\n});\nexport default {\n  getTasks: async () => {\n    try {\n      const result = await apiClient.get('/selectAll');\n      console.log('Data received from API:', result.data);\n      let data = result.data;\n      if (typeof data === 'string') {\n        try {\n          data = JSON.parse(data);\n          console.log('Parsed string data:', data);\n        } catch (e) {\n          console.error('Failed to parse string response:', e);\n          data = [];\n        }\n      }\n      if (Array.isArray(data)) {\n        console.log('Data is array with length:', data.length);\n        return data;\n      } else {\n        console.log('Data is not an array:', typeof data);\n        return [];\n      }\n    } catch (err) {}\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    try {\n      const result = await apiClient.post(`/add?Name=${encodeURIComponent(name)}`);\n      return result.data;\n    } catch (err) {\n      console.error('Error adding task:', err);\n      return null;\n    }\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    try {\n      const result = await apiClient.patch(`/update/${id}`, isComplete, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      return result.data;\n    } catch (err) {\n      console.error('Error setting completion:', err);\n      return null;\n    }\n  },\n  deleteTask: async id => {\n    console.log('deleteTask', id);\n    try {\n      const result = await apiClient.delete(`/delete/${id}`);\n      return result.data;\n    } catch (err) {\n      console.error('Error deleting task:', err);\n      return null;\n    }\n  }\n};","map":{"version":3,"names":["axios","console","log","process","env","REACT_APP_URL","API_BASE_URL","apiClient","create","baseURL","getTasks","result","get","data","JSON","parse","e","error","Array","isArray","length","err","addTask","name","post","encodeURIComponent","setCompleted","id","isComplete","patch","headers","deleteTask","delete"],"sources":["C:/Users/elish/הנדסאים/פרקטיקוד/פרקטיקוד 4/gitHub/Deploy-Apps/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\nconsole.log('REACT_APP_URL:', process.env.REACT_APP_URL);\n\nconst API_BASE_URL = process.env.REACT_APP_URL;\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL\n});\n\nexport default {\n  getTasks: async () => {\n    try {\n      const result = await apiClient.get('/selectAll');\n      console.log('Data received from API:', result.data);\n      \n      let data = result.data;\n      if (typeof data === 'string') {\n        try {\n          data = JSON.parse(data);\n          console.log('Parsed string data:', data);\n        } catch (e) {\n          console.error('Failed to parse string response:', e);\n          data = [];\n        }\n      }\n  \n      if (Array.isArray(data)) {\n        console.log('Data is array with length:', data.length);\n        return data;\n      } else {\n        console.log('Data is not an array:', typeof data);\n        return [];\n      }\n    } catch (err) {\n    }\n  },\n  addTask: async (name) => {\n    console.log('addTask', name);\n    try {\n      const result = await apiClient.post(`/add?Name=${encodeURIComponent(name)}`);\n      return result.data;\n    } catch (err) {\n      console.error('Error adding task:', err);\n      return null;\n    }\n  },\n\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', { id, isComplete });\n    try {\n      const result = await apiClient.patch(`/update/${id}`, isComplete, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      return result.data;\n    } catch (err) {\n      console.error('Error setting completion:', err);\n      return null;\n    }\n  },\n\n  deleteTask: async (id) => {\n    console.log('deleteTask', id);\n    try {\n      const result = await apiClient.delete(`/delete/${id}`);\n      return result.data;\n    } catch (err) {\n      console.error('Error deleting task:', err);\n      return null;\n    }\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,OAAO,CAACC,GAAG,CAACC,aAAa,CAAC;AAExD,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAG,CAACC,aAAa;AAC9C,MAAME,SAAS,GAAGP,KAAK,CAACQ,MAAM,CAAC;EAC7BC,OAAO,EAAEH;AACX,CAAC,CAAC;AAEF,eAAe;EACbI,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMJ,SAAS,CAACK,GAAG,CAAC,YAAY,CAAC;MAChDX,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAES,MAAM,CAACE,IAAI,CAAC;MAEnD,IAAIA,IAAI,GAAGF,MAAM,CAACE,IAAI;MACtB,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;QAC5B,IAAI;UACFA,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC;UACvBZ,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEW,IAAI,CAAC;QAC1C,CAAC,CAAC,OAAOG,CAAC,EAAE;UACVf,OAAO,CAACgB,KAAK,CAAC,kCAAkC,EAAED,CAAC,CAAC;UACpDH,IAAI,GAAG,EAAE;QACX;MACF;MAEA,IAAIK,KAAK,CAACC,OAAO,CAACN,IAAI,CAAC,EAAE;QACvBZ,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEW,IAAI,CAACO,MAAM,CAAC;QACtD,OAAOP,IAAI;MACb,CAAC,MAAM;QACLZ,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,OAAOW,IAAI,CAAC;QACjD,OAAO,EAAE;MACX;IACF,CAAC,CAAC,OAAOQ,GAAG,EAAE,CACd;EACF,CAAC;EACDC,OAAO,EAAE,MAAOC,IAAI,IAAK;IACvBtB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEqB,IAAI,CAAC;IAC5B,IAAI;MACF,MAAMZ,MAAM,GAAG,MAAMJ,SAAS,CAACiB,IAAI,CAAC,aAAaC,kBAAkB,CAACF,IAAI,CAAC,EAAE,CAAC;MAC5E,OAAOZ,MAAM,CAACE,IAAI;IACpB,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZpB,OAAO,CAACgB,KAAK,CAAC,oBAAoB,EAAEI,GAAG,CAAC;MACxC,OAAO,IAAI;IACb;EACF,CAAC;EAEDK,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACtC3B,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;MAAEyB,EAAE;MAAEC;IAAW,CAAC,CAAC;IAC/C,IAAI;MACF,MAAMjB,MAAM,GAAG,MAAMJ,SAAS,CAACsB,KAAK,CAAC,WAAWF,EAAE,EAAE,EAAEC,UAAU,EAAE;QAChEE,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,OAAOnB,MAAM,CAACE,IAAI;IACpB,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZpB,OAAO,CAACgB,KAAK,CAAC,2BAA2B,EAAEI,GAAG,CAAC;MAC/C,OAAO,IAAI;IACb;EACF,CAAC;EAEDU,UAAU,EAAE,MAAOJ,EAAE,IAAK;IACxB1B,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEyB,EAAE,CAAC;IAC7B,IAAI;MACF,MAAMhB,MAAM,GAAG,MAAMJ,SAAS,CAACyB,MAAM,CAAC,WAAWL,EAAE,EAAE,CAAC;MACtD,OAAOhB,MAAM,CAACE,IAAI;IACpB,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZpB,OAAO,CAACgB,KAAK,CAAC,sBAAsB,EAAEI,GAAG,CAAC;MAC1C,OAAO,IAAI;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}